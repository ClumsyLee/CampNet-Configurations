ssids:
  -UCAS

# Default vars:
# - username
# - password
actions:
  login:
    - url: http://210.77.16.21/eportal/InterFace.do?method=getOnlineUserInfo
      offcampus_if_failed: true
      script: |
        var url = JSON.parse(resp).redirectUrl;
        vars.query = url.substring(url.indexOf('?') + 1);

    - method: POST
      url: http://210.77.16.21/eportal/InterFace.do?method=login
      params:
        userId: "{username}"
        password: "{password}"
        queryString: "{query}"
        passwordEncrypt: "false"
      offcampus_if_failed: true
      script: |
        var data = JSON.parse(resp);

        if (data.result != 'success') {
          switch (data.message) {
            case '用户不存在,请输入正确的用户名!':
            case '密码不匹配,请输入正确的密码!': throw 'unauthorized';
            default: throw 'unknown: ' + data.message;
          }
        }

  # Expected vars:
  # - status (online | offline | offcampus) (*)
  # - online_username
  status:
    - url: http://210.77.16.21/eportal/InterFace.do?method=getOnlineUserInfo
      offcampus_if_failed: true
      script: |
        var data = JSON.parse(resp);

        if (data.result == 'success' || data.result == 'wait') {
          vars.status = 'online';
          vars.online_username = data.userId;
        } else if (data.message == '获取用户信息失败，用户可能已经下线') {
          vars.status = 'offline';
        } else {
          throw 'unknown: ' + data.message;
        }

  # Expected vars:
  # - name
  # - balance
  # - data_balance
  # - usage
  # - free_usage
  # - max_usage
  # - sessions
  #   - ip (*)
  #   - id
  #   - start_time
  #   - usage
  #   - mac
  #   - device
  profile:
    - method: POST
      url: http://124.16.77.128/selfservice/module/scgroup/web/login_judge.jsf
      params:
        name: "{username}"
        password: "{password}"
      offcampus_if_failed: true
      script: |
        var matches = /self.location='(.*?)'/.exec(resp);
        if (!matches) {
          throw 'unknown: ' + resp;
        }
        var location = matches[1];

        if (location.includes('login_self')) {
          var matches = /errorMsg=(.*?)&/.exec(location);
          throw 'unknown: ' + (matches ? matches[1] : resp);
        }

    - url: http://124.16.77.128/selfservice/module/webcontent/web/index_self.jsf
      vars:
        name: //span[@id="nameSpan"]

    - url: http://124.16.77.128/selfservice/module/userself/web/consume.jsf
      vars:
        balance: //table[@id="totalTable"]//tr[2]/td[2]
        usages: //table[@id="totalTable"]//tr[10]/td[2]
      script: |
        vars.balance = Number(vars.balance.substring(0, vars.balance.indexOf('元')));

        function parseUsage(s) {
          var usage = 0;
          var parts = s.trim().split(' ');

          for (var i = 0; i < parts.length; i += 2) {
            var ratio = 1;
            switch (parts[i + 1]) {
              case 'KB': ratio = Math.pow(1024, 1); break;
              case 'MB': ratio = Math.pow(1024, 2); break;
              case 'GB': ratio = Math.pow(1024, 3); break;
              case 'TB': ratio = Math.pow(1024, 4); break;
            }
            usage += Math.round(Number(parts[i]) * ratio);
          }
          return usage;
        }

        var i_colon = vars.usages.indexOf(':')
        var i_slash = vars.usages.indexOf('/')
        vars.usage = parseUsage(vars.usages.substring(i_colon + 1, i_slash));
        vars.free_usage = parseUsage(vars.usages.substring(i_slash + 1));
        vars.max_usage = Math.max(vars.usage, vars.free_usage) + Math.round(vars.balance * Math.pow(1024, 3));

    - url: http://124.16.77.128/selfservice/module/webcontent/web/onlinedevice_list.jsf
      vars:
        devices[]: //td/input[1]/@value
        ips[]: //td/input[2]/@value
        macs[]: //td/input[3]/@value
        start_times[]: //td/input[7]/@value
      script: |
        vars.sessions = [];
        var today = new Date();
        var year = today.getFullYear();

        for (var i = 0; i < vars.ips.length; i++) {
          // Guess the year.
          var date_str = '-' + vars.start_times[i].replace(' ', 'T') + '+08:00';
          var start_time = new Date(year + date_str);
          if (start_time > today) {
            start_time = new Date((year - 1) + date_str);
          }

          vars.sessions.push({
            ip: vars.ips[i],
            start_time: start_time,
            mac: vars.macs[i],
            device: vars.devices[i]
          });
        }

  # Extra vars:
  # - ip
  # - id
  logout_session:
    - method: POST
      url: http://124.16.77.128/selfservice/module/scgroup/web/login_judge.jsf
      params:
        name: "{username}"
        password: "{password}"
      offcampus_if_failed: true
      script: |
        var matches = /self.location='(.*?)'/.exec(resp);
        if (!matches) {
          throw 'unknown: ' + resp;
        }
        var location = matches[1];

        if (location.includes('login_self')) {
          var matches = /errorMsg=(.*?)&/.exec(location);
          throw 'unknown: ' + (matches ? matches[1] : resp);
        }

    - method: POST
      url: http://124.16.77.128/selfservice/module/userself/web/userself_ajax.jsf?methodName=indexBean.kickUserBySelfForAjax
      params:
        key: "{username}:{ip}"

  # Extra vars:
  # - year
  # - month
  # - day
  # Expected vars:
  # - usage_sums
  history:
    - method: POST
      url: http://124.16.77.128/selfservice/module/scgroup/web/login_judge.jsf
      params:
        name: "{username}"
        password: "{password}"
      offcampus_if_failed: true
      script: |
        var matches = /self.location='(.*?)'/.exec(resp);
        if (!matches) {
          throw 'unknown: ' + resp;
        }
        var location = matches[1];

        if (location.includes('login_self')) {
          var matches = /errorMsg=(.*?)&/.exec(location);
          throw 'unknown: ' + (matches ? matches[1] : resp);
        }

        vars.yearStr = String(vars.year).padStart(4, '0');
        vars.monthStr = String(vars.month).padStart(2, '0');
        vars.dayStr = String(vars.day).padStart(2, '0');

    - method: POST
      url: http://124.16.77.128/selfservice/module/billself/web/newaccountflowself_list.jsf
      params:
        ec_crd: "100000"
      vars:
        start_times[]: //table[@id="ec_table"]/tbody/tr/td[4]
        usages[]: //table[@id="ec_table"]/tbody/tr/td[5]
      script: |
        vars.usage_sums = [];
        var day_now = 1;
        var sum_now = 0;

        for (var i = vars.start_times.length - 1; i >= 0; i--) {
          var start_time = new Date(vars.start_times[i].replace(' ', 'T'));  // As UTC for convenience.
          if (start_time.getUTCFullYear() != vars.year || start_time.getUTCMonth() + 1 != vars.month) {
            continue;
          }

          var usage_str = vars.usages[i];
          if (usage_str == 'N/A') {
            continue;
          }
          var usage = 0;
          var parts = usage_str.trim().split(' ');

          for (var j = 0; j < parts.length; j += 2) {
            var ratio = 1;
            switch (parts[j + 1]) {
              case 'KB': ratio = Math.pow(1024, 1); break;
              case 'MB': ratio = Math.pow(1024, 2); break;
              case 'GB': ratio = Math.pow(1024, 3); break;
              case 'TB': ratio = Math.pow(1024, 4); break;
            }
            usage += Math.round(Number(parts[j]) * ratio);
          }

          for (var day = start_time.getUTCDate(); day_now < day; day_now++) {
            vars.usage_sums.push(sum_now);
          }
          sum_now += usage;
        }
        for (; day_now <= vars.day; day_now++) {
          vars.usage_sums.push(sum_now);
        }

  logout:
    - method: POST
      url: http://210.77.16.21/eportal/InterFace.do?method=logout
      offcampus_if_failed: true
      script: |
        var data = JSON.parse(resp);

        if (data.result != 'success') {
          switch (data.message) {
            case '用户已不在线': break;
            default: throw 'unknown: ' + data.message;
          }
        }
